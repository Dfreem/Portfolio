@page "/"

@using Portfolio.Components.Layout
@using System.Timers
@layout MainLayout
@inject NavigationManager Nav
<PageTitle>Home</PageTitle>

<style>
    .point-light {
        filter: url(#__spotlight);
    }

    #__light {
        position: absolute;
        top: 1rem;
        left: -1rem;
        min-height: 100em;
        max-height: 100em;
        min-width: 100em;
        max-width: 100em;
    }

    #ray {
        position: absolute;
        top: -10rem;
        left: -10rem;
        opacity: .3;
        filter: brightness(1.5) grayscale(.4);
        transform-origin: center;
        transform: translateX(-40px) translateY(-527px) matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, -0.005, 160, 0, 0, 1);
        pointer-events: none;
    }

</style>

<body class="@(Transitioning?"on-transition":"")">

    <MainTool>
        <div id="__face-photo">
            <div class="visually-hidden position-absolute" id="example-object">
                <svg xmlns="http://www.w3.org/2000/svg" width="200" height="200" version="1.1">
                    <path d="M10 80 C 40 10, 65 10, 95 80 S 150 150, 180 80" fill="orange" stroke="orange" stroke-width="5" />
                </svg>

            </div>


            <text id="__name-link-top" class="point-light h1">Devin Freeman</text>
            <h1 id="__name-link-bottom">Devin Freeman</h1>
        </div>
        <div id="__light">
            <img id="ray" src="/images/light-ray.png" />
        </div>
    </MainTool>
</body>

@code {

    public bool Transitioning { get; set; }

    string _toUrl = string.Empty;

    Timer _timer = default!;

    public bool Initialized { get; set; } = false;

    // blank URL does no navigation
    public void OnNavigate(string url = "")
    {
        _toUrl = url;
        Transitioning = !Transitioning;
        StateHasChanged();
        _timer = new Timer();
        _timer.Interval = 500;
        _timer.Elapsed += TransitionTimerElapsed;
        _timer.Start();

    }


    private void TransitionTimerElapsed(Object? sender, ElapsedEventArgs args)
    {
        _timer.Stop();
        if (_toUrl != string.Empty)
        {
            Nav.NavigateTo(_toUrl);
        }
    }


}