@using Portfolio.Services
@inject ToastService _toast

<style>
    .toastr {
        position: absolute;
        top: 5%;
        font-size: 14pt;
        left:50%;
        transform-origin:center;
         /* left: calc(30% - 7.5rem); */
        border-radius: 5px;
        min-width: 15rem;
        font-weight: 700;
    }

    .toast-default {
        background-color: transparent;
        transform: translateY(50%);
        visibility: hidden;
        transition: all 1s ease-in-out;

    }

    .toast-error .close i {
        color: cornsilk;
        padding-block: 0;
        filter: contrast(2);
    }

    .toast-error .close:hover i {
        color: var(--bs-professional-grey-500);
    }

    .toast-success .close i {
        filter: contrast(2);
        font-weight: 800;
    }

    .toast-success .close:hover i {
        color: var(--bs-theme-earth-yellow)!important;
    }

    .toast-success {
        color: black;
        text-shadow: 0 0 1px var(--bs-theme-green-dark);
         /* color: var(--bs-professional-grey-800); */
        background-color: var(--bs-theme-green) !important;
        border: 1px solid var(--bs-theme-green-light) !important;
    }

    .toast-error {
        color: white;
        background-color: #c03b3b !important;
        border: 1px solid var(--bs-red-600) !important;
    }

    .toast-warning {
        color: black;
        /* text-shadow: 0 0 3px black; */
        text-size-adjust: 25%;
        background-color: #ffb006 !important;
    }

    .toastr-header {
        padding: 0;
        max-height: 1.5rem;
        display: flex;
        align-items: center;
        background: inherit;
        border-top-left-radius: 5px;
        border-top-right-radius: 5px;
    }


        .toastr-header > a.btn {
            margin: 0;
        }

    .toastr-body {
        background-color: inherit;
        filter: saturate(.4) brightness(1.2);
        padding-inline: 1rem;
        padding-block: .5rem;
        border-bottom-left-radius: 5px;
        border-bottom-right-radius: 5px;
    }

    .hide-toast {
        visibility:hidden;
    }
</style>

<div class="@ToastClass toastr">
    <div class="toastr-header">
        <a class="btn btn-link link-danger ms-auto close p-0" aria-label="Close" @onclick='OffToast'><i class="bi bi-x fs-3 p-0"></i></a>
    </div>
    <div class="toastr-body px-4">
        <pre>
            @ToastMessage
        </pre>
    </div>
</div>

@code {


    public string ToastMessage { get; set; } = "Thank You!";

    public string ToastClass { get; set; } = "toast-default";

    Timer _timer = default!;

    public void OnToast(Object? sender, ToastEventArgs args)
    {
        _timer = new();
        _timer.Interval = 3000;
      
        ToastClass = args.CssClass;
        ToastMessage = args.Message;
        StateHasChanged();
        _timer.Elapsed += async (Object? sender, System.Timers.ElapsedEventArgs args) =>
        {
            _timer.Stop();
            await OffToast();
        };
        _timer.Start();
    }

    public async Task OffToast()
    {
        ToastClass = "toast-default";
        await InvokeAsync(StateHasChanged);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _toast.ToastEvent += OnToast;
        }

        await base.OnAfterRenderAsync(firstRender);
    }
}